name: NPM Cache Warmer and Build Test

on:
  workflow_dispatch: # Allows manual triggering from the GitHub UI
  # You might want to uncomment one of these to trigger automatically:
  # schedule:
  #   - cron: '0 0 * * *' # Daily at midnight UTC
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'node/package-lock.json' # Only warm cache if lock file changes, adjusted for 'node' subdirectory

jobs:
  cache-warmer:
    name: Warm NPM Cache on pr00
    runs-on: [rhel-laptop-default] # This job targets your primary runner (pr00)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Action to check out your repository code

      # --- START DEBUGGING STEPS ---
      - name: Show current directory and list files (root)
        run: |
          echo "Current working directory (root of repo):"
          pwd
          echo "Files in root directory (recursive):"
          ls -R
          echo "Attempting to cat package.json in 'node' subdirectory:"
          cat node/package.json || echo "node/package.json not found or could not be read."
          echo "Attempting to cat package-lock.json in 'node' subdirectory:"
          cat node/package-lock.json || echo "node/package-lock.json not found or could not be read."
      # --- END DEBUGGING STEPS ---

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Action to set up Node.js environment
        with:
          node-version: '20' # Specify your desired Node.js version

      - name: Create NPM cache directory if it doesn't exist and set permissions
        run: |
          mkdir -p /home/brentlipke/actions-runner/cache/npm # Create the shared cache directory
          chmod -R 777 /home/brentlipke/actions-runner/cache/npm # Ensure the runner user has necessary permissions

      - name: Install dependencies and warm cache
        run: |
          echo "Warming cache to /home/brentlipke/actions-runner/cache/npm..."
          cd node # Navigate into the 'node' subdirectory where package.json is located
          npm ci --prefer-offline --no-audit --cache /home/brentlipke/actions-runner/cache/npm
        env:
          NPM_CONFIG_CACHE: /home/brentlipke/actions-runner/cache/npm

      # --- NEW VERIFICATION STEP ---
      - name: Verify installed packages in node_modules (cache-warmer)
        run: |
          echo "Listing installed packages in node/node_modules (first 20):"
          ls -F node_modules/ | head -n 20 # List content of the node_modules directory
          echo "Total packages installed:"
          ls -F node_modules/ | wc -l # Count the number of installed packages
          # Note: This ls command is run AFTER the cd node, so it's relative to 'node/'
      # --- END NEW VERIFICATION STEP ---

      - name: Verify cache content (top level)
        run: |
          echo "Cache content on pr00 (top level - expected: _cacache/, _logs/):"
          ls -F /home/brentlipke/actions-runner/cache/npm | head -n 20 # List content to confirm cache warming


  build-test:
    name: Simulate Build with Pre-warmed Cache (${{ matrix.runner_id }})
    needs: cache-warmer # This job will only run after the `cache-warmer` job completes successfully
    runs-on: ${{ matrix.runner_id }} # Use the matrix variable for the runner

    strategy:
      fail-fast: false # Allows other matrix jobs to continue even if one fails
      matrix:
        runner_id: [rhel-laptop-default-gh01, rhel-laptop-default-gh02, rhel-laptop-default-gh03] # Define the specific runners for parallel execution

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- START DEBUGGING STEPS ---
      - name: Show current directory and list files on ${{ matrix.runner_id }} (root)
        run: |
          echo "Current working directory on ${{ matrix.runner_id }} (root of repo):"
          pwd
          echo "Files in root directory (recursive) on ${{ matrix.runner_id }}:"
          ls -R
          echo "Attempting to cat package.json in 'node' subdirectory on ${{ matrix.runner_id }}:"
          cat node/package.json || echo "node/package.json not found or could not be read."
          echo "Attempting to cat package-lock.json in 'node' subdirectory on ${{ matrix.runner_id }}:"
          cat node/package-lock.json || echo "node/package-lock.json not found or could not be read."
      # --- END DEBUGGING STEPS ---

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Clear existing npm cache in runner temp on ${{ matrix.runner_id }}
        run: |
          echo "Clearing ${{ runner.temp }}/.npm on ${{ matrix.runner_id }} to ensure fresh sync test."
          rm -rf "${{ runner.temp }}/.npm" || true

      - name: Sync pre-warmed cache from pr00 to runner temp on ${{ matrix.runner_id }}
        run: |
          SOURCE_CACHE_PATH="/home/brentlipke/actions-runner/cache/npm"
          echo "Syncing from $SOURCE_CACHE_PATH to ${{ runner.temp }}/.npm on ${{ matrix.runner_id }}"
          rsync -avz --exclude 'logs' --exclude '.cache' "$SOURCE_CACHE_PATH/" "${{ runner.temp }}/.npm"

      - name: Configure NPM to use synced cache on ${{ matrix.runner_id }}
        run: |
          npm config set cache "${{ runner.temp }}/.npm"
          echo "NPM cache configured to: $(npm config get cache)"

      - name: Install dependencies using pre-warmed cache on ${{ matrix.runner_id }}
        run: |
          echo "Attempting npm install using synced cache at: $(npm config get cache) on ${{ matrix.runner_id }}"
          cd node # Navigate into the 'node' subdirectory
          npm install --prefer-offline --no-audit
        env:
          NPM_CONFIG_CACHE: "${{ runner.temp }}/.npm"

      # --- NEW VERIFICATION STEP ---
      - name: Verify installed packages in node_modules (build-test)
        run: |
          echo "Listing installed packages in node_modules (first 20):"
          ls -F node_modules/ | head -n 20 # List content of the node_modules directory
          echo "Total packages installed:"
          ls -F node_modules/ | wc -l # Count the number of installed packages
          # Note: This ls command is run AFTER the cd node, so it's relative to 'node/'
      # --- END NEW VERIFICATION STEP ---

      - name: Simulate Build on ${{ matrix.runner_id }}
        run: |
          echo "Simulating a build process for ${{ matrix.runner_id }}..."
          cd node # Navigate into the 'node' subdirectory
          npm run build
          echo "Build simulation complete on ${{ matrix.runner_id }}"
