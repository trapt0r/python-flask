name: Prep Az Module (local)

on:
  workflow_dispatch:

jobs:
  install-az:
    strategy:
      matrix:
        runner: [ 'rhel-laptop-default' ]

    runs-on: [self-hosted, "${{ matrix.runner }}"]

    steps:
    - name: Set LOCAL_PS_PATH with real HOME
      shell: bash
      run: |
        echo "LOCAL_PS_PATH=$HOME/.local/share/powershell/Modules" >> $GITHUB_ENV

    - name: Ensure local module directory exists
      run: mkdir -p "$LOCAL_PS_PATH"

    - name: Debug check for PackageManagement.psd1
      shell: bash
      run: |
        echo "Looking for flattened and versioned PackageManagement.psd1..."
        find "$LOCAL_PS_PATH/PackageManagement" -name PackageManagement.psd1 || echo "❌ Not found"

    - name: Cache Az modules
      uses: actions/cache@v4
      id: az-cache
      with:
        path: ${{ env.LOCAL_PS_PATH }}
        key: az-modules-${{ hashFiles('**/module-version.txt') }}

    - name: Import modules and install Az
      if: steps.az-cache.outputs.cache-hit != 'true'
      shell: pwsh
      env:
        PSModulePath: "${{ env.LOCAL_PS_PATH }}:$env:PSModulePath"
      run: |
        $ErrorActionPreference = 'Stop'

        # Determine correct PackageManagement path
        $flatPath = Join-Path $env:LOCAL_PS_PATH "PackageManagement"
        $verPath  = Join-Path $env:LOCAL_PS_PATH "PackageManagement/1.4.8.1"

        $pmImportPath = if (Test-Path "$flatPath/PackageManagement.psd1") {
          $flatPath
        } elseif (Test-Path "$verPath/PackageManagement.psd1") {
          $verPath
        } else {
          throw "❌ PackageManagement.psd1 not found in flat or versioned layout."
        }

        Write-Host "Importing PackageManagement from $pmImportPath"
        Import-Module $pmImportPath -Force

        $pmPsm1 = Join-Path $pmImportPath "PackageManagement.psm1"
        if (Test-Path $pmPsm1) {
          Write-Host "Re-importing .psm1 to ensure dynamic cmdlets are exposed"
          Import-Module $pmPsm1 -Force
        }

        # Manually prepend NuGet provider path
        $nugetPath = Join-Path $env:LOCAL_PS_PATH "NuGet/2.8.5.208"
        if (-not (Test-Path "$nugetPath/NuGet.psd1")) {
          throw "❌ NuGet.psd1 not found at $nugetPath"
        }

        Write-Host "Prepending NuGet to PSModulePath"
        $env:PSModulePath = "$nugetPath:$env:PSModulePath"

        Write-Host "Listing available package providers for sanity check"
        Get-PackageProvider | Format-Table Name, Version

        Write-Host "Installing Az module using CurrentUser scope"
        Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force -Confirm:$false

    - name: Export PSModulePath to environment
      run: echo "PSModulePath=${LOCAL_PS_PATH}:$PSModulePath" >> $GITHUB_ENV

    - name: Verify Az module import
      shell: pwsh
      run: |
        Import-Module Az.Accounts
        Get-Module Az.* | Select-Object Name, Version | Sort-Object Name
