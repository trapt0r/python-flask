name: Prep Az Module (local)

on:
  workflow_dispatch:

jobs:
  install-az:
    strategy:
      matrix:
        runner: [ 'rhel-laptop-default' ]

    runs-on: [self-hosted, "${{ matrix.runner }}"]

    env:
      LOCAL_PS_PATH: $HOME/.local/share/powershell/Modules

    steps:
    - name: Ensure local module dir exists
      run: mkdir -p "$LOCAL_PS_PATH"

    - name: 🔍 Debug: Confirm PackageManagement.psd1 exists
      shell: bash
      run: |
        echo "Looking for: $LOCAL_PS_PATH/PackageManagement/1.4.8.1"
        ls -l $LOCAL_PS_PATH/PackageManagement/1.4.8.1 || echo "❌ Directory not found"

    - name: Cache Az modules
      uses: actions/cache@v4
      id: az-cache
      with:
        path: ${{ env.LOCAL_PS_PATH }}
        key: az-modules-${{ hashFiles('**/module-version.txt') }}

    - name: Import PackageManagement and install Az
      if: steps.az-cache.outputs.cache-hit != 'true'
      shell: pwsh
      env:
        PSModulePath: "${{ env.LOCAL_PS_PATH }}:$env:PSModulePath"
      run: |
        $pmImportPath = Join-Path $env:LOCAL_PS_PATH "PackageManagement/1.4.8.1"
        $pmManifest   = Join-Path $pmImportPath "PackageManagement.psd1"

        if (-not (Test-Path $pmManifest)) {
          throw "❌ PackageManagement.psd1 not found at $pmManifest. Check that it's preloaded."
        }

        Write-Host "🔧 Importing PackageManagement from: $pmImportPath"
        Import-Module $pmManifest -Force

        Write-Host "🚀 Installing Az module (CurrentUser)"
        Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force -Confirm:$false

    - name: Export PSModulePath
      run: echo "PSModulePath=${LOCAL_PS_PATH}:$PSModulePath" >> $GITHUB_ENV

    - name: Verify Az import
      shell: pwsh
      run: |
        Import-Module Az.Accounts
        Get-Module Az.* | Select-Object Name, Version | Sort-Object Name
